/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ailatrieuphu;

import DAO.CauHoiDao;
import com.mycompany.ailatrieuphu.DTO.CauHoiDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author nguyen.vu
 */
public class Game extends javax.swing.JFrame {

    int viTriCauHoi = 0; // đếm theo mảng đếm từ 0
    List<CauHoiDTO> lstCauHoi = new ArrayList<CauHoiDTO>();
    String dapAnDung = null;
    List<String> lstGiaiThuong = new ArrayList<String>();
    /**
     * Creates new form Game
     */
    public Game(int linhVuc, int mucDo) {
        initComponents();
        loadGiaiThuong();
        lstCauHoi = CauHoiDao.getDanhSachCauHoi(linhVuc, mucDo);
        
        DefaultListModel lstModelPrize = new DefaultListModel();

        for(String prize : lstGiaiThuong){
            lstModelPrize.addElement(prize);
        }

        lstPrize.setModel(lstModelPrize);
        
        lstPrize.setSelectedIndex(viTriCauHoi);
        
        if(lstCauHoi.size() > 0){
            loadCauHoi();
        }
        else{
            JOptionPane.showMessageDialog(null, "Ko có câu hỏi ứng với lĩnh vực này");
            return;
        }
    }
    
    public Game(){
        initComponents();
    }
    
    public void loadGiaiThuong(){
        lstGiaiThuong.add("200.000");
        lstGiaiThuong.add("400.000");
        lstGiaiThuong.add("600.000");
        lstGiaiThuong.add("1.000.000");
        lstGiaiThuong.add("2.000.000");
        lstGiaiThuong.add("3.000.000");
        lstGiaiThuong.add("6.000.000");
        lstGiaiThuong.add("10.000.000");
        lstGiaiThuong.add("14.000.000");
        lstGiaiThuong.add("22.000.000");
        lstGiaiThuong.add("30.000.000");
        lstGiaiThuong.add("40.000.000");
        lstGiaiThuong.add("60.000.000");
        lstGiaiThuong.add("85.000.000");
        lstGiaiThuong.add("150.000.000");
    }
    
    public void loadCauHoi(){
        CauHoiDTO cauHoi = lstCauHoi.get(viTriCauHoi);
        
        txtCauHoi.setText(cauHoi.getNoiDung());
        btnDapAnA.setText(cauHoi.getDapAnA());
        btnDapAnB.setText(cauHoi.getDapAnB());
        btnDapAnC.setText(cauHoi.getDapAnC());
        btnDapAnD.setText(cauHoi.getDapAnD());
        
        dapAnDung = cauHoi.getDapAnDung();
        
        lstPrize.setSelectedIndex(viTriCauHoi);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDapAnB = new javax.swing.JButton();
        btnDapAnA = new javax.swing.JButton();
        btnDapAnD = new javax.swing.JButton();
        btnDapAnC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCauHoi = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPrize = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDapAnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDapAnBActionPerformed(evt);
            }
        });

        btnDapAnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDapAnAActionPerformed(evt);
            }
        });

        btnDapAnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDapAnDActionPerformed(evt);
            }
        });

        btnDapAnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDapAnCActionPerformed(evt);
            }
        });

        txtCauHoi.setColumns(20);
        txtCauHoi.setRows(5);
        jScrollPane1.setViewportView(txtCauHoi);

        lstPrize.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(lstPrize);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDapAnC, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDapAnA, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDapAnB, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDapAnD, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(14, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDapAnB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDapAnA, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDapAnC, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDapAnD, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDapAnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDapAnAActionPerformed
        // TODO add your handling code here:
        String dapAnA = btnDapAnA.getText();
        if(dapAnA.equals(dapAnDung)){
            viTriCauHoi = viTriCauHoi + 1;
            if(viTriCauHoi == 4 || viTriCauHoi == 9 || viTriCauHoi == 14 ){
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn tiếp tục chơi", "Mốc câu hỏi quan trọng", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    loadCauHoi();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Bạn nhận được " + lstGiaiThuong.get(viTriCauHoi - 1) + " VNĐ" );
                    dispose();
                    new Login().setVisible(true);
                }
            }
            else{
                loadCauHoi();
            }
        }
        else{
            dispose();
            JOptionPane.showMessageDialog(null, "Game Over!!!! Tiền nhận được là : " + lstGiaiThuong.get(viTriCauHoi) + "VND");
            new Login().setVisible(true);
            return;
        }
    }//GEN-LAST:event_btnDapAnAActionPerformed

    private void btnDapAnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDapAnBActionPerformed
        // TODO add your handling code here:
        String dapAnB = btnDapAnB.getText();
        if(dapAnB.equals(dapAnDung)){
            viTriCauHoi = viTriCauHoi + 1;
             if(viTriCauHoi == 4 || viTriCauHoi == 9 || viTriCauHoi == 14 ){
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn tiếp tục chơi", "Mốc câu hỏi quan trọng", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    loadCauHoi();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Bạn nhận được " + lstGiaiThuong.get(viTriCauHoi - 1) + " VNĐ" );
                    dispose();
                    new Login().setVisible(true);
                }
            }
            else{
                loadCauHoi();
            }
        }
        else{
            dispose();
            JOptionPane.showMessageDialog(null, "Game Over!!!! Tiền nhận được là : " + lstGiaiThuong.get(viTriCauHoi) + "VND");
            new Login().setVisible(true);
            return;
        }
    }//GEN-LAST:event_btnDapAnBActionPerformed

    private void btnDapAnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDapAnCActionPerformed
        // TODO add your handling code here:
        String dapAnC = btnDapAnC.getText();
        if(dapAnC.equals(dapAnDung)){
            viTriCauHoi = viTriCauHoi + 1;
             if(viTriCauHoi == 4 || viTriCauHoi == 9 || viTriCauHoi == 14 ){
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn tiếp tục chơi", "Mốc câu hỏi quan trọng", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    loadCauHoi();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Bạn nhận được " + lstGiaiThuong.get(viTriCauHoi - 1) + " VNĐ" );
                    dispose();
                    new Login().setVisible(true);
                }
            }
            else{
                loadCauHoi();
            }
        }
        else{
            dispose();
            JOptionPane.showMessageDialog(null, "Game Over!!!! Tiền nhận được là : " + lstGiaiThuong.get(viTriCauHoi) + "VND");
            new Login().setVisible(true);
            return;
        }
    }//GEN-LAST:event_btnDapAnCActionPerformed

    private void btnDapAnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDapAnDActionPerformed
        // TODO add your handling code here:
        String dapAnD = btnDapAnD.getText();
        if(dapAnD.equals(dapAnDung)){
            viTriCauHoi = viTriCauHoi + 1;
            if(viTriCauHoi == 4 || viTriCauHoi == 9 || viTriCauHoi == 14 ){
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn tiếp tục chơi", "Mốc câu hỏi quan trọng", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    loadCauHoi();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Bạn nhận được " + lstGiaiThuong.get(viTriCauHoi - 1) + " VNĐ" );
                    dispose();
                    new Login().setVisible(true);
                }
            }
            else{
                loadCauHoi();
            }
        }
        else{
            dispose();
            JOptionPane.showMessageDialog(null, "Game Over!!!! Tiền nhận được là : " + lstGiaiThuong.get(viTriCauHoi) + "VND");
            new Login().setVisible(true);
            return;
        }
    }//GEN-LAST:event_btnDapAnDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDapAnA;
    private javax.swing.JButton btnDapAnB;
    private javax.swing.JButton btnDapAnC;
    private javax.swing.JButton btnDapAnD;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstPrize;
    private javax.swing.JTextArea txtCauHoi;
    // End of variables declaration//GEN-END:variables
}
